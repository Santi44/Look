@page "/categoria"
@page "/categoria/{Id:int}"

@inject ICategoriaServicio _categoriaServicio
@inject NavigationManager _navServicio
@inject IToastService toastService
@attribute [Authorize(Roles = "Usuario")]

<div class="row justify-content-center mt-3">
    <p class="col-sm-12 col-md-8 col-xl-10 h4 mt-2 text-center text-primary">@titulo</p>
</div>

<div class="row justify-content-center mt-3">
    <div class="col-sm-12 col-md-8 col-xl-10">
        <div class="card p-4 shadow-sm rounded-3">
            <EditForm Model="modelo" OnValidSubmit="GuardarCambios">
                <DataAnnotationsValidator />
                <div class="mb-4">
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">Nombre</span>
                        <input type="text" class="form-control rounded-pill" @bind-value="modelo.Nombre" placeholder="Nombre de la categoría">
                    </div>
                    <ValidationMessage For="@(() => modelo.Nombre)" class="text-danger" />
                </div>

                <div class="d-flex justify-content-between mt-4">
                    <button type="submit" class="btn btn-primary rounded-pill px-4 py-2">@boton</button>
                    <a href="/categorias" class="btn btn-outline-secondary rounded-pill px-4 py-2">Volver</a>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }
    private string titulo = "Nueva Categoria";
    private string boton = "Crear";
    private CategoriaDTO modelo = new CategoriaDTO();

    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            titulo = "Editar Categoria";
            boton = "Actualizar";

            var response = await _categoriaServicio.Obtener(Id);
            if (response.EsCorrecto)
            {
                modelo = (CategoriaDTO)response.Resultado!;
            }
            else
                toastService.ShowWarning(response.Mensaje!);
        }
    }

    private async Task GuardarCambios()
    {
        bool respuesta = true;
        string mensaje = string.Empty;

        if (Id != 0)
        {
            var response = await _categoriaServicio.Editar(modelo);
            if (response.EsCorrecto)
                mensaje = "Categoría fue modificada correctamente.";
            else
            {
                respuesta = false;
                mensaje = "No se pudo editar la categoría.";
            }
        }
        else
        {
            var response = await _categoriaServicio.Crear(modelo);
            if (response.EsCorrecto)
                mensaje = "Categoría fue creada exitosamente.";
            else
            {
                respuesta = false;
                mensaje = "No se pudo crear la categoría.";
            }
        }

        if (respuesta)
        {
            toastService.ShowSuccess(mensaje);
            _navServicio.NavigateTo("/categorias");
        }
        else
        {
            toastService.ShowError(mensaje);
        }
    }
}
