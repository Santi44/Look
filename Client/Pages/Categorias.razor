@page "/categorias"
@inject ICategoriaServicio categoriaServicio;
@inject IToastService toastService
@inject SweetAlertService Swal;
@attribute [Authorize(Roles = "Usuario")]

<div class="container my-4">
    <div class="row align-items-center mb-4">
        <div class="col-md-8 col-lg-9">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Buscar categoría..." @bind-value="buscar">
                <button class="btn btn-outline-secondary" type="button" @onclick="(async() => await ObtenerCategorias(buscar))">
                    <i class="oi oi-magnifying-glass"></i>
                </button>
            </div>
        </div>
        <div class="col-md-4 col-lg-3 text-md-end mt-2 mt-md-0">
            <a class="btn btn-success w-100" href="/categoria">Nueva Categoría</a>
        </div>
    </div>

    <div class="row gx-4 row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-xl-4">
        @if (lista != null)
        {
            foreach (var item in lista)
            {
                <div class="col mb-5">
                    <div class="card h-100 shadow-sm">
                        <div class="card-body text-center">
                            <i class="oi oi-folder display-4 text-primary mb-3"></i>
                            <h5 class="card-title text-start fw-bold">@item.Nombre</h5>
                        </div>
                        <div class="card-footer d-flex justify-content-between bg-light">
                            <a class="btn btn-outline-primary btn-sm" href="/categoria/@item.IdCategoria">
                                <i class="oi oi-pencil"></i> Editar
                            </a>
                            <button class="btn btn-outline-danger btn-sm" type="button" @onclick="(async () => await Eliminar(item))">
                                <i class="oi oi-trash"></i> Eliminar
                            </button>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="text-center my-5">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-3">Cargando categorías...</p>
            </div>
        }
    </div>
</div>

<style>
    .btn-wsp {
        position: fixed;
        width: 60px;
        height: 60px;
        line-height: 63px;
        bottom: 25px;
        right: 25px;
        background: #25d366;
        color: #FFF;
        border-radius: 50px;
        text-align: center;
        font-size: 35px;
        box-shadow: 0px 1px 10px rgba(0,0,0,0.3);
        z-index: 100;
        transition: all 300ms ease;
    }

        .btn-wsp:hover {
            background: #20ba5a;
        }
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<a href="https://api.whatsapp.com/send?phone=+5491154569803&text=Lookeate" class="btn-wsp" target="_blank">
    <i class="fa fa-whatsapp"></i>
</a>

@code {
    private List<CategoriaDTO>? lista = null;
    private string buscar = "";

    private async Task ObtenerCategorias(string Valor = "")
    {
        var response = await categoriaServicio.Lista(Valor);

        if (response.EsCorrecto)
        {
            lista = (List<CategoriaDTO>)response.Resultado!;
        }
        else
        {
            lista = new List<CategoriaDTO>();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await ObtenerCategorias();
    }

    private async Task Eliminar(CategoriaDTO modelo)
    {
        SweetAlertResult result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "¿Está seguro?",
                Text = $"Eliminar categoría: {modelo.Nombre}",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Sí, eliminar",
                CancelButtonText = "No, volver"
            });

        if (result.IsConfirmed)
        {
            var response = await categoriaServicio.Eliminar(modelo.IdCategoria);

            if (response.EsCorrecto)
            {
                await ObtenerCategorias();
                toastService.ShowSuccess("Categoría eliminada correctamente");
            }
            else
            {
                toastService.ShowError(response.Mensaje!);
            }
        }
    }
}
