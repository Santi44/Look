@page "/producto"
@page "/producto/{Id:int}"
@inject IProductoServicio _productoServicio
@inject ICategoriaServicio _categoriaServicio
@inject NavigationManager _navServicio
@inject IToastService toastService
@attribute [Authorize(Roles = "Usuario")]


<div class="row justify-content-center  mt-3">
    <p class="col-sm-12 col-md-8 col-xl-10 h4 mt-2">@titulo</p>
</div>
<div class="row justify-content-center  mt-3">
    <div class="col-sm-12 col-md-8 col-xl-10">

        <EditForm Model="modelo" OnValidSubmit="GuardarCambios">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="input-group mb-3">
                <span class="input-group-text bg-light" id="basic-addon3">Nombre</span>
                <input type="text" class="form-control" @bind-value="modelo.Nombre">
                <ValidationMessage For="@(()=>modelo.Nombre)" />
            </div>
            <div class="input-group  mb-3">
                <span class="input-group-text bg-light">Descripcion</span>
                <textarea class="form-control" @bind="modelo.Descripcion"></textarea>
                <ValidationMessage For="@(()=>modelo.Descripcion)" />
            </div>
            <div class="input-group mb-3">
                <label class="input-group-text bg-light" for="inputGroupSelect01">Categoria</label>
                <select class="form-select" value="@modelo.IdCategoria" @onchange="CambiarCategoria">
                    @foreach(var item in listaCategoria)
                    {
                        <option value="@item.IdCategoria">@item.Nombre</option>
                    }
                </select>
            </div>
            <div class="input-group mb-3">
                <span class="input-group-text bg-light" id="basic-addon3">Precio</span>
                <input type="number" class="form-control" @bind-value="modelo.Precio" >
                <ValidationMessage For="@(()=>modelo.Precio)" />
            </div>
            <div class="input-group mb-3">
                <span class="input-group-text bg-light" id="basic-addon3">Precio Oferta</span>
                <input type="number" class="form-control" @bind-value="modelo.PrecioOferta">
                <ValidationMessage For="@(()=>modelo.PrecioOferta)" />
            </div>
            <div class="input-group mb-3">
                <span class="input-group-text bg-light" id="basic-addon3">Cantidad</span>
                <input type="number" class="form-control" @bind-value="modelo.Cantidad">
                <ValidationMessage For="@(()=>modelo.Cantidad)" />
            </div>
            <div class="input-group mb-3">
                <label class="input-group-text bg-light">Imagen</label>
                <InputFile type="file" class="form-control" accept="image/png, image/gif, image/jpeg" OnChange="OnFileChange"></InputFile>
            </div>
            <div class="mb-3">
                <button type="submit" class="btn btn-primary" style="width:130px">@boton</button>
                <a href="/productos" class="btn btn-secondary" style="width:130px">Volver</a>
            </div>
        </EditForm>


        

    </div>
    
</div>
<style>
    .btn-wsp {
        position: fixed;
        width: 60px;
        height: 60px;
        line-height: 63px;
        bottom: 25px;
        right: 25px;
        background: #25d366;
        color: #FFF;
        border-radius: 50px;
        text-align: center;
        font-size: 35px;
        box-shadow: 0px 1px 10px rgba(0,0,0,0.3);
        z-index: 100;
        transition: all 300ms ease;
    }

        .btn-wsp:hover {
            background: #20ba5a;
        }

    @@media only screen and (min-width:320px) and (max-width:768px) {
        .btn-wsp {
            width: 63px;
            height: 63px;
            line-height: 66px;
        }
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<a href="https://api.whatsapp.com/send?phone=+5491154569803&text=BienvenidosLookeate" class="btn-wsp" target="_blank"><i class="fa fa-whatsapp icono"></i></a>

@code {
    [Parameter] public int Id { get; set; }
    private string titulo = "Nuevo Producto";
    private string boton = "Crear";
    private List<CategoriaDTO> listaCategoria = new List<CategoriaDTO>();
    private ProductoDTO modelo = new ProductoDTO();

    void CambiarCategoria(ChangeEventArgs e)
    {
        modelo.IdCategoria = Convert.ToInt32(e.Value.ToString());
    }

    protected override async Task OnInitializedAsync(){

        var response = await _categoriaServicio.Lista("");
        if (response.EsCorrecto)
        {
            listaCategoria = (List<CategoriaDTO>)response.Resultado!;
            if (listaCategoria.Any() && Id == 0)
                modelo.IdCategoria = listaCategoria.First().IdCategoria;
        }
        

    }

    async Task OnFileChange(InputFileChangeEventArgs e)
    {
        FileInfo fileInfo = new FileInfo(e.File.Name);
        if (fileInfo.Extension.ToLower().Contains(".jpg") || fileInfo.Extension.ToLower().Contains(".png"))
        {

            var format = $"image/{fileInfo.Extension.Replace(".","")}";
            var resizeImage = await e.File.RequestImageFileAsync(format, 450, 300);        
            var buffer = new byte[resizeImage.Size];
            await resizeImage.OpenReadStream().ReadAsync(buffer);
            var imageData = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
            modelo.Imagen = imageData;
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            titulo = "Editar Producto";
            boton = "Actualizar";

            var response = await _productoServicio.Obtener(Id);
            if (response.EsCorrecto!)
            {
                modelo = (ProductoDTO)response.Resultado!;
            }
            else
                toastService.ShowWarning(response.Mensaje!);
        }
    }


    private async Task GuardarCambios()
    {

        bool respuesta = true;
        string mensaje = string.Empty;
  


        if (Id != 0)
        {
            var response = await _productoServicio.Editar(modelo);
            if (response.EsCorrecto)
                mensaje = "Producto fue modificado";
            else
            {
                respuesta = false;
                mensaje = "No se pudo editar";
            }
        }
        else
        {
            var response = await _productoServicio.Crear(modelo);
            if (response.EsCorrecto)
                mensaje = "Producto fue creado";
            else
            {
                respuesta = false;
                mensaje = "No se pudo crear";
            }
        }

        if (respuesta)
        {
            toastService.ShowSuccess(mensaje);
            _navServicio.NavigateTo("/productos");
        }
        else
            toastService.ShowError(mensaje);
    }
}
